判断一个方法是否需要事物，主要是通过aop的PointcutAdvisor中的Pointcut来匹配类的
方法以及类上是否有Transactional注解


事务信息与事务属性并不相同，也就是 Transactionlnfo与TransactionAttribute 并不相同，
Transactionlnfo 中包含 TransactionAttribute 信息，但是，除了 TransactionAttribute 外还有其他事务
信息 ，例如 PlatformTransactionManager的TransactionStatus 相关信息

TransactionStatus包含ConnectionHolder，ConnectionHolder中包含Connection

创建事物信息是通过(TransactionInterceptor extends TransactionAspectSupport).createTransactionIfNecessary方法


spring的事物管理器第一次创建事物DataSourceTransactionManager.doBegin是在从连接池中获得Connection后
,将Connection组装成ConnectionHolder后，再已当前DataSource为key，ConnectionHolder为value组装成一个Map，
再将Map通过TransactionSynchronizationManager.bindResource放入当前ThreadLocal中的，即一个线程中的一个数据源此时只存在一个链接
当同一个线程中的其它有事物的方法获取事物时，是拿的当前线程中已有的事物ConnectionHolder组装成

所有当前线程中要获取数据库连接Connection或绑定数据库连接到当前线程，都是通过工具类TransactionSynchronizationManager实现
事物开启后， 真正执行sql的类也是在当前线程中获取Connection的


事物隔离级别处理：
对于新建的事物，都会将上一个事物挂起后存入到新建事物的suspendedResources变量中，以便后续恢复使用
对于嵌入式事物，就是对当前事物设置保存点