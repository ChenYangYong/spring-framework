<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">


	<beans>
		<!--<context:component-scan base-package="aoptest"/>-->
		<!--<context:property-placeholder location="classpath:application.properties" />-->
		<!--<aop:aspectj-autoproxy proxy-target-class="false" expose-proxy="false"/>-->
		<context:load-time-weaver aspectj-weaving="on" />
		<!--<bean class="aoptest.AspectJTest"></bean>-->
		<bean id="proxyObjectTest" class="aoptest.AopTestBean"  ></bean>
<!--		<bean id="userService" class="aoptest.impl.UserServiceImpl"  ></bean>-->
		<!-- 配置切面的bean -->
		<bean id="aopXmlTest" class="aoptest.AopXmlTest"></bean>

		<bean id="advisorTest" class="aoptest.AdvisorTest"></bean>

		<!-- 配置AOP ，表示出对象中的逻辑-->
		<aop:config proxy-target-class="true" expose-proxy="true">
			<!-- 配置切点表达式 -->
			<aop:pointcut  id="pointcut" expression="execution(* aoptest.AopTestBean.*(..))"></aop:pointcut>
			<aop:advisor id="advisor" advice-ref="advisorTest"  pointcut="execution(public void aoptest.AopTestBean.test(String))" order="1"/>
			<!-- 配置切面通知 -->
			<aop:aspect id="aspect" ref="aopXmlTest" order="1">
				<!--前置通知  -->
				<aop:before  method="beforedMethod" pointcut-ref="pointcut"></aop:before>
				<!--返回通知,注意，方法中有多少个参数，这里就要配置多少个参数，参数值和函数中一致-->
				<aop:after-returning method="afterReturningMethod" pointcut-ref="pointcut" returning="result"></aop:after-returning>
				<!--异常通知，注意，方法中有多少个参数，这里就要配置多少个参数，参数值和函数中一致-->
				<aop:after-throwing method="afterThrowingMethod" pointcut-ref="pointcut" throwing="e"></aop:after-throwing>
			</aop:aspect>
		</aop:config>
	</beans>

</beans>